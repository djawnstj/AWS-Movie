# 환경별로 설정 분리하기

# local, dev, production 공통
server:
  port: 8080

# 실행할 환경 지정 spring:profiles:active 옵션
spring:
  profiles:
    active: dev

  # Redis
  redis:
    host: 127.0.0.1
    port: 6379
    password: root

  # Session
  session:
    store-type: redis
    redis:
      flush-mode: on_save

  # 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB


# aws 설정
# 사용할 S3 bucket region 입력
cloud:
  aws:
    credentials:
      accessKey: AKIAX6GBURBLI7E6TFVM       # AWS IAM AccessKey 적기
      secretKey: lgrvEvxYdZT43y8UoE+XxdpxhTuvpu5tpm23G1IR   # AWS IAM SecretKey 적기
    s3:
      bucket: awsmoviebucket    # ex) marryting-gyunny
      dir: djawnstj # ex) /gyunny
    region:
      static: ap-northeast-2
    stack:
      auto: false

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace # sql 쿼리 로그에 파라미터를 남김

# --- 로 설정을 구분하고 spring:config:active:on-profile 옵셥에 사용될 환경(local, dev, prod)를 명시
---
spring:
  config:
    activate:
      on-profile: dev

  datasource:
#    url: jdbc:h2:tcp://localhost/~/projects/spring/AWS-Movie/db/aws_movie # 윈도우
    url: jdbc:h2:tcp://localhost/~/Documents/projects/spring/AWS-Movie/db/aws_movie;MODE=MYSQL # 맥
#    url: jdbc:h2:~/Documents/projects/spring/AWS-Movie/db/aws_movie;MODE=MYSQL # 맥
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        dialect.storage_engine: innodb

  was:
    protocol: "http"
    host: "127.0.0.1"
    port: "8081"

---
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:mariadb://aws-movie-api.cwtpsgbsj8sv.ap-northeast-2.rds.amazonaws.com:3306/AWS-Movie
    username: root
    password: ojs159357
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        dialect.storage_engine: innodb

  was:
    protocol: "http"
    host: "127.0.0.1"
    port: "8081"